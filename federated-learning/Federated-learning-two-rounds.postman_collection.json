{
	"info": {
		"_postman_id": "f16a7841-a683-44b1-9b8b-a039feb49fc4",
		"name": "Federated learning two rounds",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "26869261"
	},
	"item": [
		{
			"name": "Service: First model",
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://{{MLpath}}/initialize",
					"protocol": "http",
					"host": [
						"{{MLpath}}"
					],
					"path": [
						"initialize"
					]
				}
			},
			"response": []
		},
		{
			"name": "SetJepConfig",
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{{jeppath}}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://{{EXT1path}}/api/config",
					"protocol": "http",
					"host": [
						"{{EXT1path}}"
					],
					"path": [
						"api",
						"config"
					]
				}
			},
			"response": []
		},
		{
			"name": "2. SetJepConfig",
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{{jeppath}}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://{{EXT2path}}/api/config",
					"protocol": "http",
					"host": [
						"{{EXT2path}}"
					],
					"path": [
						"api",
						"config"
					]
				}
			},
			"response": []
		},
		{
			"name": "Register Provider Data Plane Instance",
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"@context\": {\r\n        \"@vocab\": \"https://w3id.org/edc/v0.0.1/ns/\"\r\n    },\r\n    \"@id\": \"http-pull-provider-dataplane\",\r\n    \"url\": \"http://localhost:28183/control/transfer\",\r\n    \"allowedSourceTypes\": [\r\n        \"HttpData\"\r\n    ],\r\n    \"allowedDestTypes\": [\r\n        \"HttpData\"\r\n    ]\r\n}"
				},
				"url": {
					"raw": "http://{{CON1path}}/management/v2/dataplanes",
					"protocol": "http",
					"host": [
						"{{CON1path}}"
					],
					"path": [
						"management",
						"v2",
						"dataplanes"
					]
				}
			},
			"response": []
		},
		{
			"name": "2. Register Provider Data Plane Instance",
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"@context\": {\r\n        \"@vocab\": \"https://w3id.org/edc/v0.0.1/ns/\"\r\n    },\r\n    \"@id\": \"http-pull-provider-dataplane\",\r\n    \"url\": \"http://localhost:28183/control/transfer\",\r\n    \"allowedSourceTypes\": [\r\n        \"HttpData\"\r\n    ],\r\n    \"allowedDestTypes\": [\r\n        \"HttpData\"\r\n    ]\r\n}"
				},
				"url": {
					"raw": "http://{{CON2path}}/management/v2/dataplanes",
					"protocol": "http",
					"host": [
						"{{CON2path}}"
					],
					"path": [
						"management",
						"v2",
						"dataplanes"
					]
				}
			},
			"response": []
		},
		{
			"name": "Create an Asset on the provider side",
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "content-type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"@context\": {\n        \"@vocab\": \"https://w3id.org/edc/v0.0.1/ns/\"\n    },\n    \"@id\": \"assetId\",\n    \"properties\": {\n        \"name\": \"product description\",\n        \"contenttype\": \"application/json\"\n    },\n    \"dataAddress\": {\n        \"type\": \"HttpData\",\n        \"name\": \"Test asset\",\n        \"baseUrl\": \"http://localhost:7000/model\"\n    }\n}"
				},
				"url": {
					"raw": "http://{{CON1path}}/management/v3/assets",
					"protocol": "http",
					"host": [
						"{{CON1path}}"
					],
					"path": [
						"management",
						"v3",
						"assets"
					]
				}
			},
			"response": []
		},
		{
			"name": "2. Create an Asset on the provider side",
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "content-type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"@context\": {\n        \"@vocab\": \"https://w3id.org/edc/v0.0.1/ns/\"\n    },\n    \"@id\": \"assetId\",\n    \"properties\": {\n        \"name\": \"product description\",\n        \"contenttype\": \"application/json\"\n    },\n    \"dataAddress\": {\n        \"type\": \"HttpData\",\n        \"name\": \"Test asset\",\n        \"baseUrl\": \"http://localhost:7000/model\"\n    }\n}"
				},
				"url": {
					"raw": "http://{{CON2path}}/management/v3/assets",
					"protocol": "http",
					"host": [
						"{{CON2path}}"
					],
					"path": [
						"management",
						"v3",
						"assets"
					]
				}
			},
			"response": []
		},
		{
			"name": "Create a Policy on the Provider",
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "content-type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n           \"@context\": {\n             \"edc\": \"https://w3id.org/edc/v0.0.1/ns/\",\n             \"odrl\": \"http://www.w3.org/ns/odrl/2/\"\n           },\n           \"@id\": \"aPolicy\",\n           \"policy\": {\n             \"@type\": \"set\",\n             \"odrl:permission\": [],\n             \"odrl:prohibition\": [],\n             \"odrl:obligation\": []\n           }\n         }"
				},
				"url": {
					"raw": "http://{{CON1path}}/management/v2/policydefinitions",
					"protocol": "http",
					"host": [
						"{{CON1path}}"
					],
					"path": [
						"management",
						"v2",
						"policydefinitions"
					]
				}
			},
			"response": []
		},
		{
			"name": "2. Create a Policy on the Provider",
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "content-type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n           \"@context\": {\n             \"edc\": \"https://w3id.org/edc/v0.0.1/ns/\",\n             \"odrl\": \"http://www.w3.org/ns/odrl/2/\"\n           },\n           \"@id\": \"aPolicy\",\n           \"policy\": {\n             \"@type\": \"set\",\n             \"odrl:permission\": [],\n             \"odrl:prohibition\": [],\n             \"odrl:obligation\": []\n           }\n         }"
				},
				"url": {
					"raw": "http://{{CON2path}}/management/v2/policydefinitions",
					"protocol": "http",
					"host": [
						"{{CON2path}}"
					],
					"path": [
						"management",
						"v2",
						"policydefinitions"
					]
				}
			},
			"response": []
		},
		{
			"name": "Create a contract definition on Provider",
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "content-type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n           \"@context\": {\n             \"edc\": \"https://w3id.org/edc/v0.0.1/ns/\"\n           },\n           \"@id\": \"1\",\n           \"accessPolicyId\": \"aPolicy\",\n           \"contractPolicyId\": \"aPolicy\",\n           \"assetsSelector\": []\n         }"
				},
				"url": {
					"raw": "http://{{CON1path}}/management/v2/contractdefinitions",
					"protocol": "http",
					"host": [
						"{{CON1path}}"
					],
					"path": [
						"management",
						"v2",
						"contractdefinitions"
					]
				}
			},
			"response": []
		},
		{
			"name": "2. Create a contract definition on Provider",
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "content-type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n           \"@context\": {\n             \"edc\": \"https://w3id.org/edc/v0.0.1/ns/\"\n           },\n           \"@id\": \"1\",\n           \"accessPolicyId\": \"aPolicy\",\n           \"contractPolicyId\": \"aPolicy\",\n           \"assetsSelector\": []\n         }"
				},
				"url": {
					"raw": "http://{{CON2path}}/management/v2/contractdefinitions",
					"protocol": "http",
					"host": [
						"{{CON2path}}"
					],
					"path": [
						"management",
						"v2",
						"contractdefinitions"
					]
				}
			},
			"response": []
		},
		{
			"name": "How to fetch catalog on consumer side",
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n      \"@context\": {\n        \"edc\": \"https://w3id.org/edc/v0.0.1/ns/\"\n      },\n      \"providerUrl\": \"http://localhost:28182/protocol\",\n      \"protocol\": \"dataspace-protocol-http\"\n    }"
				},
				"url": {
					"raw": "http://{{PCONpath}}/management/v2/catalog/request",
					"protocol": "http",
					"host": [
						"{{PCONpath}}"
					],
					"path": [
						"management",
						"v2",
						"catalog",
						"request"
					]
				}
			},
			"response": []
		},
		{
			"name": "2. How to fetch catalog on consumer side",
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n      \"@context\": {\n        \"edc\": \"https://w3id.org/edc/v0.0.1/ns/\"\n      },\n      \"providerUrl\": \"http://localhost:38182/protocol\",\n      \"protocol\": \"dataspace-protocol-http\"\n    }"
				},
				"url": {
					"raw": "http://{{PCONpath}}/management/v2/catalog/request",
					"protocol": "http",
					"host": [
						"{{PCONpath}}"
					],
					"path": [
						"management",
						"v2",
						"catalog",
						"request"
					]
				}
			},
			"response": []
		},
		{
			"name": "Negotiate a contract",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Retrieve contract negotiation\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.collectionVariables.set(\"contract negotiation\", jsonData[\"@id\"])",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "content-type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n  \"@context\": {\n    \"edc\": \"https://w3id.org/edc/v0.0.1/ns/\",\n    \"odrl\": \"http://www.w3.org/ns/odrl/2/\"\n  },\n  \"@type\": \"NegotiationInitiateRequestDto\",\n  \"connectorId\": \"provider\",\n  \"connectorAddress\": \"http://localhost:28182/protocol\",\n  \"consumerId\": \"consumer\",\n  \"providerId\": \"provider\",\n  \"protocol\": \"dataspace-protocol-http\",\n  \"offer\": {\n   \"offerId\": \"MQ==:YXNzZXRJZA==:MjNhMGYzZmEtYWNlMi00ODRjLWEwM2UtNDk0MTUzZmNlZjQ2\",\n   \"assetId\": \"assetId\",\n   \"policy\": {\n     \"@id\": \"MQ==:YXNzZXRJZA==:MjNhMGYzZmEtYWNlMi00ODRjLWEwM2UtNDk0MTUzZmNlZjQ2\",\n     \"@type\": \"Set\",\n     \"odrl:permission\": [],\n     \"odrl:prohibition\": [],\n     \"odrl:obligation\": [],\n     \"odrl:target\": \"assetId\"\n   }\n  }\n}"
				},
				"url": {
					"raw": "http://{{PCONpath}}/management/v2/contractnegotiations",
					"protocol": "http",
					"host": [
						"{{PCONpath}}"
					],
					"path": [
						"management",
						"v2",
						"contractnegotiations"
					]
				}
			},
			"response": []
		},
		{
			"name": "Getting the contract agreement id",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Retrieve contract agreement\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.collectionVariables.set(\"contract agreement\", jsonData[\"contractAgreementId\"])",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"url": {
					"raw": "http://{{PCONpath}}/management/v2/contractnegotiations/{{contract negotiation}}",
					"protocol": "http",
					"host": [
						"{{PCONpath}}"
					],
					"path": [
						"management",
						"v2",
						"contractnegotiations",
						"{{contract negotiation}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "2. Negotiate a contract",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Retrieve contract negotiation\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.collectionVariables.set(\"contract negotiation\", jsonData[\"@id\"])",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "content-type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n  \"@context\": {\n    \"edc\": \"https://w3id.org/edc/v0.0.1/ns/\",\n    \"odrl\": \"http://www.w3.org/ns/odrl/2/\"\n  },\n  \"@type\": \"NegotiationInitiateRequestDto\",\n  \"connectorId\": \"provider\",\n  \"connectorAddress\": \"http://localhost:38182/protocol\",\n  \"consumerId\": \"consumer\",\n  \"providerId\": \"provider2\",\n  \"protocol\": \"dataspace-protocol-http\",\n  \"offer\": {\n   \"offerId\": \"MQ==:YXNzZXRJZA==:NzYxZGNjNTAtN2Q3Yi00YzhhLWI2MDctNjgyOWJlMjRhZWRk\",\n   \"assetId\": \"assetId\",\n   \"policy\": {\n     \"@id\": \"MQ==:YXNzZXRJZA==:NzYxZGNjNTAtN2Q3Yi00YzhhLWI2MDctNjgyOWJlMjRhZWRk\",\n     \"@type\": \"Set\",\n     \"odrl:permission\": [],\n     \"odrl:prohibition\": [],\n     \"odrl:obligation\": [],\n     \"odrl:target\": \"assetId\"\n   }\n  }\n}"
				},
				"url": {
					"raw": "http://{{PCONpath}}/management/v2/contractnegotiations",
					"protocol": "http",
					"host": [
						"{{PCONpath}}"
					],
					"path": [
						"management",
						"v2",
						"contractnegotiations"
					]
				}
			},
			"response": []
		},
		{
			"name": "2. Getting the contract agreement id",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Retrieve contract agreement\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.collectionVariables.set(\"contract agreement2\", jsonData[\"contractAgreementId\"])",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"url": {
					"raw": "http://{{PCONpath}}/management/v2/contractnegotiations/{{contract negotiation}}",
					"protocol": "http",
					"host": [
						"{{PCONpath}}"
					],
					"path": [
						"management",
						"v2",
						"contractnegotiations",
						"{{contract negotiation}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Start the transfer",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Retrieve transfer id\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.collectionVariables.set(\"transfer id\", jsonData[\"@id\"])",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n  \"@context\": {\n    \"@vocab\": \"https://w3id.org/edc/v0.0.1/ns/\"\n  },\n  \"@type\": \"TransferRequest\",\n  \"dataDestination\": {\n    \"type\": \"HttpData\",\n    \"baseUrl\": \"http://localhost:8181/api/input\"\n  },\n  \"protocol\": \"dataspace-protocol-http\",\n  \"assetId\": \"assetId\",\n  \"contractId\": \"{{contract agreement}}\",\n  \"connectorId\": \"provider\",\n  \"counterPartyAddress\": \"http://localhost:28182/protocol\"\n}"
				},
				"url": {
					"raw": "http://{{PCONpath}}/management/v2/transferprocesses",
					"protocol": "http",
					"host": [
						"{{PCONpath}}"
					],
					"path": [
						"management",
						"v2",
						"transferprocesses"
					]
				}
			},
			"response": []
		},
		{
			"name": "2. Start the transfer",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Retrieve transfer id\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.collectionVariables.set(\"transfer id\", jsonData[\"@id\"])",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"@context\": {\n        \"@vocab\": \"https://w3id.org/edc/v0.0.1/ns/\"\n    },\n    \"@type\": \"TransferRequest\",\n    \"dataDestination\": {\n        \"type\": \"HttpData\",\n        \"baseUrl\": \"http://localhost:8183/api/input\"\n    },\n    \"protocol\": \"dataspace-protocol-http\",\n    \"assetId\": \"assetId\",\n    \"contractId\": \"{{contract agreement2}}\",\n    \"connectorId\": \"provider\",\n    \"counterPartyAddress\": \"http://localhost:38182/protocol\"\n}"
				},
				"url": {
					"raw": "http://{{PCONpath}}/management/v2/transferprocesses",
					"protocol": "http",
					"host": [
						"{{PCONpath}}"
					],
					"path": [
						"management",
						"v2",
						"transferprocesses"
					]
				}
			},
			"response": []
		},
		{
			"name": "Train",
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://{{EXT1path}}/api/train",
					"protocol": "http",
					"host": [
						"{{EXT1path}}"
					],
					"path": [
						"api",
						"train"
					]
				}
			},
			"response": []
		},
		{
			"name": "2. Train",
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://{{EXT2path}}/api/train",
					"protocol": "http",
					"host": [
						"{{EXT2path}}"
					],
					"path": [
						"api",
						"train"
					]
				}
			},
			"response": []
		},
		{
			"name": "Register Provider Data Plane Instance Copy",
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"@context\": {\r\n        \"@vocab\": \"https://w3id.org/edc/v0.0.1/ns/\"\r\n    },\r\n    \"@id\": \"http-pull-provider-dataplane\",\r\n    \"url\": \"http://localhost:18183/control/transfer\",\r\n    \"allowedSourceTypes\": [\r\n        \"HttpData\"\r\n    ],\r\n    \"allowedDestTypes\": [\r\n        \"HttpData\"\r\n    ]\r\n}"
				},
				"url": {
					"raw": "http://{{PCONpath}}/management/v2/dataplanes",
					"protocol": "http",
					"host": [
						"{{PCONpath}}"
					],
					"path": [
						"management",
						"v2",
						"dataplanes"
					]
				}
			},
			"response": []
		},
		{
			"name": "Create an Asset on the provider side Copy",
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "content-type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"@context\": {\n        \"@vocab\": \"https://w3id.org/edc/v0.0.1/ns/\"\n    },\n    \"@id\": \"assetId\",\n    \"properties\": {\n        \"name\": \"product description\",\n        \"contenttype\": \"application/json\"\n    },\n    \"dataAddress\": {\n        \"type\": \"HttpData\",\n        \"name\": \"Test asset\",\n        \"baseUrl\": \"http://localhost:8181/api/update\"\n    }\n}"
				},
				"url": {
					"raw": "http://{{PCONpath}}/management/v3/assets",
					"protocol": "http",
					"host": [
						"{{PCONpath}}"
					],
					"path": [
						"management",
						"v3",
						"assets"
					]
				}
			},
			"response": []
		},
		{
			"name": "2. Create an Asset on the provider side Copy",
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "content-type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"@context\": {\n        \"@vocab\": \"https://w3id.org/edc/v0.0.1/ns/\"\n    },\n    \"@id\": \"assetIdcon2\",\n    \"properties\": {\n        \"name\": \"product description\",\n        \"contenttype\": \"application/json\"\n    },\n    \"dataAddress\": {\n        \"type\": \"HttpData\",\n        \"name\": \"Test asset\",\n        \"baseUrl\": \"http://localhost:8183/api/update\"\n    }\n}"
				},
				"url": {
					"raw": "http://{{PCONpath}}/management/v3/assets",
					"protocol": "http",
					"host": [
						"{{PCONpath}}"
					],
					"path": [
						"management",
						"v3",
						"assets"
					]
				}
			},
			"response": []
		},
		{
			"name": "Create a Policy on the Provider Copy",
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "content-type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n           \"@context\": {\n             \"edc\": \"https://w3id.org/edc/v0.0.1/ns/\",\n             \"odrl\": \"http://www.w3.org/ns/odrl/2/\"\n           },\n           \"@id\": \"aPolicy\",\n           \"policy\": {\n             \"@type\": \"set\",\n             \"odrl:permission\": [],\n             \"odrl:prohibition\": [],\n             \"odrl:obligation\": []\n           }\n         }"
				},
				"url": {
					"raw": "http://{{PCONpath}}/management/v2/policydefinitions",
					"protocol": "http",
					"host": [
						"{{PCONpath}}"
					],
					"path": [
						"management",
						"v2",
						"policydefinitions"
					]
				}
			},
			"response": []
		},
		{
			"name": "Create a contract definition on Provider Copy",
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "content-type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n           \"@context\": {\n             \"edc\": \"https://w3id.org/edc/v0.0.1/ns/\"\n           },\n           \"@id\": \"1\",\n           \"accessPolicyId\": \"aPolicy\",\n           \"contractPolicyId\": \"aPolicy\",\n           \"assetsSelector\": []\n         }"
				},
				"url": {
					"raw": "http://{{PCONpath}}/management/v2/contractdefinitions",
					"protocol": "http",
					"host": [
						"{{PCONpath}}"
					],
					"path": [
						"management",
						"v2",
						"contractdefinitions"
					]
				}
			},
			"response": []
		},
		{
			"name": "How to fetch catalog on consumer side Copy",
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n      \"@context\": {\n        \"edc\": \"https://w3id.org/edc/v0.0.1/ns/\"\n      },\n      \"providerUrl\": \"http://localhost:18182/protocol\",\n      \"protocol\": \"dataspace-protocol-http\"\n    }"
				},
				"url": {
					"raw": "http://{{CON1path}}/management/v2/catalog/request",
					"protocol": "http",
					"host": [
						"{{CON1path}}"
					],
					"path": [
						"management",
						"v2",
						"catalog",
						"request"
					]
				}
			},
			"response": []
		},
		{
			"name": "2. How to fetch catalog on consumer side Copy",
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n      \"@context\": {\n        \"edc\": \"https://w3id.org/edc/v0.0.1/ns/\"\n      },\n      \"providerUrl\": \"http://localhost:18182/protocol\",\n      \"protocol\": \"dataspace-protocol-http\"\n    }"
				},
				"url": {
					"raw": "http://{{CON2path}}/management/v2/catalog/request",
					"protocol": "http",
					"host": [
						"{{CON2path}}"
					],
					"path": [
						"management",
						"v2",
						"catalog",
						"request"
					]
				}
			},
			"response": []
		},
		{
			"name": "Negotiate a contract Copy",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Retrieve contract negotiation\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.collectionVariables.set(\"contract negotiation\", jsonData[\"@id\"])",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "content-type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n  \"@context\": {\n    \"edc\": \"https://w3id.org/edc/v0.0.1/ns/\",\n    \"odrl\": \"http://www.w3.org/ns/odrl/2/\"\n  },\n  \"@type\": \"NegotiationInitiateRequestDto\",\n  \"connectorId\": \"provider\",\n  \"connectorAddress\": \"http://localhost:18182/protocol\",\n  \"consumerId\": \"provider\",\n  \"providerId\": \"consumer\",\n  \"protocol\": \"dataspace-protocol-http\",\n  \"offer\": {\n   \"offerId\": \"MQ==:YXNzZXRJZA==:NjJjMWJlYzgtOWFhMC00YWU3LTk1NDUtN2YwMmUxYjlkYWM1\",\n   \"assetId\": \"assetId\",\n   \"policy\": {\n     \"@id\": \"MQ==:YXNzZXRJZA==:NjJjMWJlYzgtOWFhMC00YWU3LTk1NDUtN2YwMmUxYjlkYWM1\",\n     \"@type\": \"Set\",\n     \"odrl:permission\": [],\n     \"odrl:prohibition\": [],\n     \"odrl:obligation\": [],\n     \"odrl:target\": \"assetId\"\n   }\n  }\n}"
				},
				"url": {
					"raw": "http://{{CON1path}}/management/v2/contractnegotiations",
					"protocol": "http",
					"host": [
						"{{CON1path}}"
					],
					"path": [
						"management",
						"v2",
						"contractnegotiations"
					]
				}
			},
			"response": []
		},
		{
			"name": "Getting the contract agreement id Copy",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Retrieve contract agreement\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.collectionVariables.set(\"contract agreement\", jsonData[\"contractAgreementId\"])",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"url": {
					"raw": "http://{{CON1path}}/management/v2/contractnegotiations/{{contract negotiation}}",
					"protocol": "http",
					"host": [
						"{{CON1path}}"
					],
					"path": [
						"management",
						"v2",
						"contractnegotiations",
						"{{contract negotiation}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Negotiate a contract Copy 2",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Retrieve contract negotiation\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.collectionVariables.set(\"contract negotiation\", jsonData[\"@id\"])",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "content-type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n  \"@context\": {\n    \"edc\": \"https://w3id.org/edc/v0.0.1/ns/\",\n    \"odrl\": \"http://www.w3.org/ns/odrl/2/\"\n  },\n  \"@type\": \"NegotiationInitiateRequestDto\",\n  \"connectorId\": \"provider\",\n  \"connectorAddress\": \"http://localhost:18182/protocol\",\n  \"consumerId\": \"provider\",\n  \"providerId\": \"consumer\",\n  \"protocol\": \"dataspace-protocol-http\",\n  \"offer\": {\n   \"offerId\": \"MQ==:YXNzZXRJZGNvbjI=:NjMzYjg5OWYtZDM5YS00NDYwLTkzN2EtNTM2YTE0YmViNWFm\",\n   \"assetId\": \"assetIdcon2\",\n   \"policy\": {\n     \"@id\": \"MQ==:YXNzZXRJZGNvbjI=:NjMzYjg5OWYtZDM5YS00NDYwLTkzN2EtNTM2YTE0YmViNWFm\",\n     \"@type\": \"Set\",\n     \"odrl:permission\": [],\n     \"odrl:prohibition\": [],\n     \"odrl:obligation\": [],\n     \"odrl:target\": \"assetIdcon2\"\n   }\n  }\n}"
				},
				"url": {
					"raw": "http://{{CON2path}}/management/v2/contractnegotiations",
					"protocol": "http",
					"host": [
						"{{CON2path}}"
					],
					"path": [
						"management",
						"v2",
						"contractnegotiations"
					]
				}
			},
			"response": []
		},
		{
			"name": "2. Getting the contract agreement id Copy",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Retrieve contract agreement\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.collectionVariables.set(\"contract agreement2\", jsonData[\"contractAgreementId\"])",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"url": {
					"raw": "http://{{CON2path}}/management/v2/contractnegotiations/{{contract negotiation}}",
					"protocol": "http",
					"host": [
						"{{CON2path}}"
					],
					"path": [
						"management",
						"v2",
						"contractnegotiations",
						"{{contract negotiation}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Start the transfer Copy",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Retrieve transfer id\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.collectionVariables.set(\"transfer id\", jsonData[\"@id\"])",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n  \"@context\": {\n    \"@vocab\": \"https://w3id.org/edc/v0.0.1/ns/\"\n  },\n  \"@type\": \"TransferRequest\",\n  \"dataDestination\": {\n    \"type\": \"HttpData\",\n    \"baseUrl\": \"http://localhost:7000/federatedinput?client=1\"\n  },\n  \"protocol\": \"dataspace-protocol-http\",\n  \"assetId\": \"assetId\",\n  \"contractId\": \"{{contract agreement}}\",\n  \"connectorId\": \"consumer\",\n  \"counterPartyAddress\": \"http://localhost:18182/protocol\"\n}"
				},
				"url": {
					"raw": "http://{{CON1path}}/management/v2/transferprocesses",
					"protocol": "http",
					"host": [
						"{{CON1path}}"
					],
					"path": [
						"management",
						"v2",
						"transferprocesses"
					]
				}
			},
			"response": []
		},
		{
			"name": "2. Start the transfer Copy",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Retrieve transfer id\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.collectionVariables.set(\"transfer id\", jsonData[\"@id\"])",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n  \"@context\": {\n    \"@vocab\": \"https://w3id.org/edc/v0.0.1/ns/\"\n  },\n  \"@type\": \"TransferRequest\",\n  \"dataDestination\": {\n    \"type\": \"HttpData\",\n    \"baseUrl\": \"http://localhost:7000/federatedinput?client=2\"\n  },\n  \"protocol\": \"dataspace-protocol-http\",\n  \"assetId\": \"assetIdcon2\",\n  \"contractId\": \"{{contract agreement2}}\",\n  \"connectorId\": \"consumer\",\n  \"counterPartyAddress\": \"http://localhost:18182/protocol\"\n}"
				},
				"url": {
					"raw": "http://{{CON2path}}/management/v2/transferprocesses",
					"protocol": "http",
					"host": [
						"{{CON2path}}"
					],
					"path": [
						"management",
						"v2",
						"transferprocesses"
					]
				}
			},
			"response": []
		},
		{
			"name": "FedAvg",
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://{{MLpath}}/fedavg?clients=2",
					"protocol": "http",
					"host": [
						"{{MLpath}}"
					],
					"path": [
						"fedavg"
					],
					"query": [
						{
							"key": "clients",
							"value": "2"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Negotiate a contract Copy",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Retrieve contract negotiation\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.collectionVariables.set(\"contract negotiation\", jsonData[\"@id\"])",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "content-type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n  \"@context\": {\n    \"edc\": \"https://w3id.org/edc/v0.0.1/ns/\",\n    \"odrl\": \"http://www.w3.org/ns/odrl/2/\"\n  },\n  \"@type\": \"NegotiationInitiateRequestDto\",\n  \"connectorId\": \"provider\",\n  \"connectorAddress\": \"http://localhost:28182/protocol\",\n  \"consumerId\": \"consumer\",\n  \"providerId\": \"provider\",\n  \"protocol\": \"dataspace-protocol-http\",\n  \"offer\": {\n   \"offerId\": \"MQ==:YXNzZXRJZA==:MjNhMGYzZmEtYWNlMi00ODRjLWEwM2UtNDk0MTUzZmNlZjQ2\",\n   \"assetId\": \"assetId\",\n   \"policy\": {\n     \"@id\": \"MQ==:YXNzZXRJZA==:MjNhMGYzZmEtYWNlMi00ODRjLWEwM2UtNDk0MTUzZmNlZjQ2\",\n     \"@type\": \"Set\",\n     \"odrl:permission\": [],\n     \"odrl:prohibition\": [],\n     \"odrl:obligation\": [],\n     \"odrl:target\": \"assetId\"\n   }\n  }\n}"
				},
				"url": {
					"raw": "http://{{PCONpath}}/management/v2/contractnegotiations",
					"protocol": "http",
					"host": [
						"{{PCONpath}}"
					],
					"path": [
						"management",
						"v2",
						"contractnegotiations"
					]
				}
			},
			"response": []
		},
		{
			"name": "Getting the contract agreement id Copy",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Retrieve contract agreement\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.collectionVariables.set(\"contract agreement\", jsonData[\"contractAgreementId\"])",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"url": {
					"raw": "http://{{PCONpath}}/management/v2/contractnegotiations/{{contract negotiation}}",
					"protocol": "http",
					"host": [
						"{{PCONpath}}"
					],
					"path": [
						"management",
						"v2",
						"contractnegotiations",
						"{{contract negotiation}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "2. Negotiate a contract Copy",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Retrieve contract negotiation\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.collectionVariables.set(\"contract negotiation\", jsonData[\"@id\"])",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "content-type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n  \"@context\": {\n    \"edc\": \"https://w3id.org/edc/v0.0.1/ns/\",\n    \"odrl\": \"http://www.w3.org/ns/odrl/2/\"\n  },\n  \"@type\": \"NegotiationInitiateRequestDto\",\n  \"connectorId\": \"provider\",\n  \"connectorAddress\": \"http://localhost:38182/protocol\",\n  \"consumerId\": \"consumer\",\n  \"providerId\": \"provider2\",\n  \"protocol\": \"dataspace-protocol-http\",\n  \"offer\": {\n   \"offerId\": \"MQ==:YXNzZXRJZA==:NzYxZGNjNTAtN2Q3Yi00YzhhLWI2MDctNjgyOWJlMjRhZWRk\",\n   \"assetId\": \"assetId\",\n   \"policy\": {\n     \"@id\": \"MQ==:YXNzZXRJZA==:NzYxZGNjNTAtN2Q3Yi00YzhhLWI2MDctNjgyOWJlMjRhZWRk\",\n     \"@type\": \"Set\",\n     \"odrl:permission\": [],\n     \"odrl:prohibition\": [],\n     \"odrl:obligation\": [],\n     \"odrl:target\": \"assetId\"\n   }\n  }\n}"
				},
				"url": {
					"raw": "http://{{PCONpath}}/management/v2/contractnegotiations",
					"protocol": "http",
					"host": [
						"{{PCONpath}}"
					],
					"path": [
						"management",
						"v2",
						"contractnegotiations"
					]
				}
			},
			"response": []
		},
		{
			"name": "2. Getting the contract agreement id Copy",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Retrieve contract agreement\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.collectionVariables.set(\"contract agreement2\", jsonData[\"contractAgreementId\"])",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"url": {
					"raw": "http://{{PCONpath}}/management/v2/contractnegotiations/{{contract negotiation}}",
					"protocol": "http",
					"host": [
						"{{PCONpath}}"
					],
					"path": [
						"management",
						"v2",
						"contractnegotiations",
						"{{contract negotiation}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Start the transfer Copy",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Retrieve transfer id\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.collectionVariables.set(\"transfer id\", jsonData[\"@id\"])",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n  \"@context\": {\n    \"@vocab\": \"https://w3id.org/edc/v0.0.1/ns/\"\n  },\n  \"@type\": \"TransferRequest\",\n  \"dataDestination\": {\n    \"type\": \"HttpData\",\n    \"baseUrl\": \"http://localhost:8181/api/input\"\n  },\n  \"protocol\": \"dataspace-protocol-http\",\n  \"assetId\": \"assetId\",\n  \"contractId\": \"{{contract agreement}}\",\n  \"connectorId\": \"provider\",\n  \"counterPartyAddress\": \"http://localhost:28182/protocol\"\n}"
				},
				"url": {
					"raw": "http://{{PCONpath}}/management/v2/transferprocesses",
					"protocol": "http",
					"host": [
						"{{PCONpath}}"
					],
					"path": [
						"management",
						"v2",
						"transferprocesses"
					]
				}
			},
			"response": []
		},
		{
			"name": "2. Start the transfer Copy",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Retrieve transfer id\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.collectionVariables.set(\"transfer id\", jsonData[\"@id\"])",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"@context\": {\n        \"@vocab\": \"https://w3id.org/edc/v0.0.1/ns/\"\n    },\n    \"@type\": \"TransferRequest\",\n    \"dataDestination\": {\n        \"type\": \"HttpData\",\n        \"baseUrl\": \"http://localhost:8183/api/input\"\n    },\n    \"protocol\": \"dataspace-protocol-http\",\n    \"assetId\": \"assetId\",\n    \"contractId\": \"{{contract agreement2}}\",\n    \"connectorId\": \"provider\",\n    \"counterPartyAddress\": \"http://localhost:38182/protocol\"\n}"
				},
				"url": {
					"raw": "http://{{PCONpath}}/management/v2/transferprocesses",
					"protocol": "http",
					"host": [
						"{{PCONpath}}"
					],
					"path": [
						"management",
						"v2",
						"transferprocesses"
					]
				}
			},
			"response": []
		},
		{
			"name": "Train Copy",
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://{{EXT1path}}/api/train",
					"protocol": "http",
					"host": [
						"{{EXT1path}}"
					],
					"path": [
						"api",
						"train"
					]
				}
			},
			"response": []
		},
		{
			"name": "2. Train Copy",
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://{{EXT2path}}/api/train",
					"protocol": "http",
					"host": [
						"{{EXT2path}}"
					],
					"path": [
						"api",
						"train"
					]
				}
			},
			"response": []
		},
		{
			"name": "Negotiate a contract Copy 2",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Retrieve contract negotiation\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.collectionVariables.set(\"contract negotiation\", jsonData[\"@id\"])",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "content-type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n  \"@context\": {\n    \"edc\": \"https://w3id.org/edc/v0.0.1/ns/\",\n    \"odrl\": \"http://www.w3.org/ns/odrl/2/\"\n  },\n  \"@type\": \"NegotiationInitiateRequestDto\",\n  \"connectorId\": \"provider\",\n  \"connectorAddress\": \"http://localhost:18182/protocol\",\n  \"consumerId\": \"provider\",\n  \"providerId\": \"consumer\",\n  \"protocol\": \"dataspace-protocol-http\",\n  \"offer\": {\n   \"offerId\": \"MQ==:YXNzZXRJZA==:NjJjMWJlYzgtOWFhMC00YWU3LTk1NDUtN2YwMmUxYjlkYWM1\",\n   \"assetId\": \"assetId\",\n   \"policy\": {\n     \"@id\": \"MQ==:YXNzZXRJZA==:NjJjMWJlYzgtOWFhMC00YWU3LTk1NDUtN2YwMmUxYjlkYWM1\",\n     \"@type\": \"Set\",\n     \"odrl:permission\": [],\n     \"odrl:prohibition\": [],\n     \"odrl:obligation\": [],\n     \"odrl:target\": \"assetId\"\n   }\n  }\n}"
				},
				"url": {
					"raw": "http://{{CON1path}}/management/v2/contractnegotiations",
					"protocol": "http",
					"host": [
						"{{CON1path}}"
					],
					"path": [
						"management",
						"v2",
						"contractnegotiations"
					]
				}
			},
			"response": []
		},
		{
			"name": "Getting the contract agreement id Copy 2",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Retrieve contract agreement\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.collectionVariables.set(\"contract agreement\", jsonData[\"contractAgreementId\"])",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"url": {
					"raw": "http://{{CON1path}}/management/v2/contractnegotiations/{{contract negotiation}}",
					"protocol": "http",
					"host": [
						"{{CON1path}}"
					],
					"path": [
						"management",
						"v2",
						"contractnegotiations",
						"{{contract negotiation}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Negotiate a contract Copy 3",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Retrieve contract negotiation\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.collectionVariables.set(\"contract negotiation\", jsonData[\"@id\"])",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "content-type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n  \"@context\": {\n    \"edc\": \"https://w3id.org/edc/v0.0.1/ns/\",\n    \"odrl\": \"http://www.w3.org/ns/odrl/2/\"\n  },\n  \"@type\": \"NegotiationInitiateRequestDto\",\n  \"connectorId\": \"provider\",\n  \"connectorAddress\": \"http://localhost:18182/protocol\",\n  \"consumerId\": \"provider\",\n  \"providerId\": \"consumer\",\n  \"protocol\": \"dataspace-protocol-http\",\n  \"offer\": {\n   \"offerId\": \"MQ==:YXNzZXRJZGNvbjI=:NjMzYjg5OWYtZDM5YS00NDYwLTkzN2EtNTM2YTE0YmViNWFm\",\n   \"assetId\": \"assetIdcon2\",\n   \"policy\": {\n     \"@id\": \"MQ==:YXNzZXRJZGNvbjI=:NjMzYjg5OWYtZDM5YS00NDYwLTkzN2EtNTM2YTE0YmViNWFm\",\n     \"@type\": \"Set\",\n     \"odrl:permission\": [],\n     \"odrl:prohibition\": [],\n     \"odrl:obligation\": [],\n     \"odrl:target\": \"assetIdcon2\"\n   }\n  }\n}"
				},
				"url": {
					"raw": "http://{{CON2path}}/management/v2/contractnegotiations",
					"protocol": "http",
					"host": [
						"{{CON2path}}"
					],
					"path": [
						"management",
						"v2",
						"contractnegotiations"
					]
				}
			},
			"response": []
		},
		{
			"name": "2. Getting the contract agreement id Copy 2",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Retrieve contract agreement\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.collectionVariables.set(\"contract agreement2\", jsonData[\"contractAgreementId\"])",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"url": {
					"raw": "http://{{CON2path}}/management/v2/contractnegotiations/{{contract negotiation}}",
					"protocol": "http",
					"host": [
						"{{CON2path}}"
					],
					"path": [
						"management",
						"v2",
						"contractnegotiations",
						"{{contract negotiation}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Start the transfer Copy 2",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Retrieve transfer id\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.collectionVariables.set(\"transfer id\", jsonData[\"@id\"])",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n  \"@context\": {\n    \"@vocab\": \"https://w3id.org/edc/v0.0.1/ns/\"\n  },\n  \"@type\": \"TransferRequest\",\n  \"dataDestination\": {\n    \"type\": \"HttpData\",\n    \"baseUrl\": \"http://localhost:7000/federatedinput?client=1\"\n  },\n  \"protocol\": \"dataspace-protocol-http\",\n  \"assetId\": \"assetId\",\n  \"contractId\": \"{{contract agreement}}\",\n  \"connectorId\": \"consumer\",\n  \"counterPartyAddress\": \"http://localhost:18182/protocol\"\n}"
				},
				"url": {
					"raw": "http://{{CON1path}}/management/v2/transferprocesses",
					"protocol": "http",
					"host": [
						"{{CON1path}}"
					],
					"path": [
						"management",
						"v2",
						"transferprocesses"
					]
				}
			},
			"response": []
		},
		{
			"name": "2. Start the transfer Copy 2",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Retrieve transfer id\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.collectionVariables.set(\"transfer id\", jsonData[\"@id\"])",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n  \"@context\": {\n    \"@vocab\": \"https://w3id.org/edc/v0.0.1/ns/\"\n  },\n  \"@type\": \"TransferRequest\",\n  \"dataDestination\": {\n    \"type\": \"HttpData\",\n    \"baseUrl\": \"http://localhost:7000/federatedinput?client=2\"\n  },\n  \"protocol\": \"dataspace-protocol-http\",\n  \"assetId\": \"assetIdcon2\",\n  \"contractId\": \"{{contract agreement2}}\",\n  \"connectorId\": \"consumer\",\n  \"counterPartyAddress\": \"http://localhost:18182/protocol\"\n}"
				},
				"url": {
					"raw": "http://{{CON2path}}/management/v2/transferprocesses",
					"protocol": "http",
					"host": [
						"{{CON2path}}"
					],
					"path": [
						"management",
						"v2",
						"transferprocesses"
					]
				}
			},
			"response": []
		},
		{
			"name": "FedAvg Copy",
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://{{MLpath}}/fedavg?clients=2",
					"protocol": "http",
					"host": [
						"{{MLpath}}"
					],
					"path": [
						"fedavg"
					],
					"query": [
						{
							"key": "clients",
							"value": "2"
						}
					]
				}
			},
			"response": []
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"packages": {},
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"packages": {},
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "contract negotiation",
			"value": ""
		},
		{
			"key": "contract agreement",
			"value": ""
		},
		{
			"key": "transfer id",
			"value": ""
		},
		{
			"key": "contract agreement2",
			"value": ""
		},
		{
			"key": "jeppath",
			"value": "/home/kuhlmann/edc-extensions-self/federated-learning",
			"type": "string"
		},
		{
			"key": "MLpath",
			"value": "localhost:7000"
		},
		{
			"key": "EXT1path",
			"value": "localhost:8181"
		},
		{
			"key": "EXT2path",
			"value": "localhost:8183"
		},
		{
			"key": "CON1path",
			"value": "localhost:28181"
		},
		{
			"key": "CON2path",
			"value": "localhost:38181"
		},
		{
			"key": "PCONpath",
			"value": "localhost:18181"
		}
	]
}